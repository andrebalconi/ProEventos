{"version":3,"sources":["./src/app/components/contatos/contatos.component.ts","./src/app/components/contatos/contatos.component.html","./src/app/helpers/DateTimeFormat.pipe.ts","./src/app/components/palestrantes/palestrante-lista/palestrante-lista.component.ts","./src/app/components/palestrantes/palestrante-lista/palestrante-lista.component.html","./src/app/services/lote.service.ts","./src/app/util/Constants.ts","./src/environments/environment.ts","./src/app/components/eventos/eventos.component.ts","./src/app/components/eventos/eventos.component.html","./src/app/shared/nav/nav.component.html","./src/app/shared/nav/nav.component.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/models/Pagination.ts","./src/app/components/redesSociais/redesSociais.component.ts","./src/app/components/redesSociais/redesSociais.component.html","./src/app/components/eventos/evento-lista/evento-lista.component.ts","./src/app/components/eventos/evento-lista/evento-lista.component.html","./src/app/components/user/registration/registration.component.ts","./src/app/components/user/registration/registration.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/eventos/evento-detalhe/evento-detalhe.component.ts","./src/app/components/eventos/evento-detalhe/evento-detalhe.component.html","./src/app/helpers/ValidatorField.ts","./src/app/components/user/perfil/perfil-detalhe/perfil-detalhe.component.ts","./src/app/components/user/perfil/perfil-detalhe/perfil-detalhe.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/titulo/titulo.component.html","./src/app/shared/titulo/titulo.component.ts","./src/app/app.module.ts","./src/app/guard/auth.guard.ts","./src/app/services/account.service.ts","./src/app/components/palestrantes/palestrante-detalhe/palestrante-detalhe.component.ts","./src/app/components/palestrantes/palestrante-detalhe/palestrante-detalhe.component.html","./src/app/components/user/login/login.component.ts","./src/app/components/user/login/login.component.html","./src/app/interceptors/jwt.interceptor.ts","./src/app/services/redeSocial.service.ts","./src/app/services/evento.service.ts","./src/app/components/palestrantes/palestrantes.component.ts","./src/app/components/palestrantes/palestrantes.component.html","./src/app/services/palestrante.service.ts","./src/app/components/user/perfil/perfil.component.ts","./src/app/components/user/perfil/perfil.component.html","./src/app/app-routing.module.ts","./src/app/components/user/user.component.ts","./src/app/components/user/user.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contatos',\n  templateUrl: './contatos.component.html',\n  styleUrls: ['./contatos.component.scss']\n})\nexport class ContatosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-titulo [titulo]=\"'Contatos'\" [iconClass]=\"'fas fa-envelope-open-text'\"></app-titulo>\n\n","import { Constants } from './../util/Constants';\nimport { DatePipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'DateFormatPipe',\n})\nexport class DateTimeFormatPipe extends DatePipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    return super.transform(value, Constants.DATE_TIME_FMT);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { PalestranteService } from '@app/services/palestrante.service';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { Palestrante } from '@app/models/Palestrante';\nimport { PaginatedResult, Pagination } from '@app/models/Pagination';\nimport { environment } from '@environments/environment';\n\n@Component({\n  selector: 'app-palestrante-lista',\n  templateUrl: './palestrante-lista.component.html',\n  styleUrls: ['./palestrante-lista.component.scss']\n})\nexport class PalestranteListaComponent implements OnInit {\n  public Palestrantes: Palestrante[] = [];\n  public eventoId = 0;\n  public pagination = {} as Pagination;\n\n  constructor(\n    private palestranteService: PalestranteService,\n    private modalService: BsModalService,\n    private toastr: ToastrService,\n    private spinner: NgxSpinnerService,\n    private router: Router\n  ) { }\n\n  public ngOnInit(): void {\n    this.pagination = {\n      currentPage: 1,\n      itemsPerPage: 3,\n      totalItems: 1,\n    } as Pagination;\n\n    this.carregarPalestrantes();\n  }\n\n  termoBuscaChanged: Subject<string> = new Subject<string>();\n\n  public filtrarPalestrantes(evt: any): void {\n    if (this.termoBuscaChanged.observers.length === 0) {\n      this.termoBuscaChanged\n        .pipe(debounceTime(1000))\n        .subscribe((filtrarPor) => {\n          this.spinner.show();\n          this.palestranteService\n            .getPalestrantes(\n              this.pagination.currentPage,\n              this.pagination.itemsPerPage,\n              filtrarPor\n            )\n            .subscribe(\n              (paginatedResult: PaginatedResult<Palestrante[]>) => {\n                this.Palestrantes = paginatedResult.result;\n                this.pagination = paginatedResult.pagination;\n              },\n              (error: any) => {\n                this.spinner.hide();\n                this.toastr.error('Erro ao Carregar os Palestrantes', 'Erro!');\n              }\n            )\n            .add(() => this.spinner.hide());\n        });\n    }\n    this.termoBuscaChanged.next(evt.value);\n  }\n\n  public getImagemURL(imagemName: string): string {\n    if (imagemName)\n      return environment.apiURL + `resources/perfil/${imagemName}`;\n    else\n      return './assets/img/perfil.png';\n  }\n\n  public carregarPalestrantes(): void {\n    this.spinner.show();\n\n    this.palestranteService\n      .getPalestrantes(this.pagination.currentPage, this.pagination.itemsPerPage)\n      .subscribe(\n        (paginatedResult: PaginatedResult<Palestrante[]>) => {\n          this.Palestrantes = paginatedResult.result;\n          this.pagination = paginatedResult.pagination;\n        },\n        (error: any) => {\n          this.spinner.hide();\n          this.toastr.error('Erro ao Carregar os Eventos', 'Erro!');\n        }\n      )\n      .add(() => this.spinner.hide());\n  }\n\n}\n","<div class=\"card rounded shadow-sm p-3\">\n\n  <div class=\"d-flex\">\n    <div class=\"flex-fill\">\n      <div class=\"input-group mb-2\">\n        <div class=\"input-group-prepend\">\n          <div class=\"input-group-text\">Filtro: </div>\n        </div>\n        <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"Filtrar por Nome e Minicurrículo\"\n        (input)=\"filtrarPalestrantes($event.target)\"\n        >\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"Palestrantes && Palestrantes.length\" class=\"row mt-2\">\n    <div class=\"col-md-4 mb-4 d-flex align-items-stretch\" *ngFor=\"let palestrante of Palestrantes\">\n\n      <div class=\"card\">\n          <div class=\"d-flex align-self-center pt-3\">\n              <img\n              [src]=\"getImagemURL(palestrante.user.imagemURL)\"\n              class=\"rounded-circle\"\n              width=\"120\" height=\"120\">\n          </div>\n          <div class=\"card-body\">\n            <div class=\"h4 text-center mb-3\">@{{palestrante.user.userName}}</div>\n            <div class=\"h7 text-bold pb-1\"><b>Nome:</b> {{palestrante.user.primeiroNome + ' ' + palestrante.user.ultimoNome}}</div>\n            <div class=\"h7\">\n              {{palestrante.miniCurriculo}}\n            </div>\n          </div>\n          <ul class=\"list-group list-group-flush\">\n            <li class=\"list-group-item\">\n              <div class=\"row\">\n                <div class=\"col-6 text-center border-right\">\n                  <div class=\"h5\">0</div>\n                  <div class=\"h6 text-muted\">Meus Eventos Criados</div>\n                </div>\n                <div class=\"col-6 text-center\">\n                  <div class=\"h5\">0</div>\n                  <div class=\"h6 text-muted\">Eventos como Palestrante</div>\n                </div>\n              </div>\n            </li>\n          </ul>\n        </div>\n\n    </div>\n  </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Lote } from '@app/models/Lote';\n\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class LoteService {\n  baseURL = 'https://localhost:5001/api/lotes';\n\n  constructor(private http: HttpClient) {}\n\n  public getLotesByEventoId(eventoId: number): Observable<Lote[]> {\n    return this.http.get<Lote[]>(`${this.baseURL}/${eventoId}`).pipe(take(1));\n  }\n\n  public saveLote(eventoId: number, lotes: Lote[]): Observable<Lote[]> {\n    return this.http\n      .put<Lote[]>(`${this.baseURL}/${eventoId}`, lotes)\n      .pipe(take(1));\n  }\n\n  public deleteLote(eventoId: number, loteId: number): Observable<any> {\n    return this.http\n      .delete(`${this.baseURL}/${eventoId}/${loteId}`)\n      .pipe(take(1));\n  }\n}\n","export class Constants {\n  static readonly DATE_FMT = 'dd/MM/yyyy';\n  static readonly DATE_TIME_FMT = `${Constants.DATE_FMT} hh:mm a`;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiURL: 'https://localhost:5001/',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-eventos',\n  templateUrl: './eventos.component.html',\n  styleUrls: ['./eventos.component.scss'],\n  // providers: [EventoService]\n})\nexport class EventosComponent implements OnInit {\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<app-titulo [titulo]=\"'Eventos'\" [iconClass]=\"'fa fa-calendar-alt'\" [botaoListar]=\"true\">\n</app-titulo>\n<router-outlet></router-outlet>\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-white shadow-sm\" *ngIf=\"showMenu()\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"home\">\n      <i class=\"fa fa-users mb-2\"></i>\n    </a>\n    <button class=\"navbar-toggler\" (click)=\"isCollapsed = !isCollapsed\" type=\"button\" data-bs-toggle=\"collapse\"\n      data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" [collapse]=\"isCollapsed\" [isAnimated]=\"true\" id=\"navbarNav\">\n      <ul class=\"navbar-nav mr-auto\">\n        <ng-container *ngIf=\"(accountService.currentUser$ | async) !== null\">\n          <li class=\"nav-item\" routerLinkActive=\"active\">\n            <a class=\"nav-link\" aria-current=\"page\" routerLink=\"dashboard\">Dashboard</a>\n          </li>\n          <li class=\"nav-item\" routerLinkActive=\"active\">\n            <a class=\"nav-link\" aria-current=\"page\" routerLink=\"eventos/lista\">Eventos</a>\n          </li>\n          <li class=\"nav-item\" routerLinkActive=\"active\">\n            <a class=\"nav-link\" routerLink=\"palestrantes\">Palestrantes</a>\n          </li>\n          <li class=\"nav-item\" routerLinkActive=\"active\">\n            <a class=\"nav-link\" routerLink=\"contatos\">Contatos</a>\n          </li>\n        </ng-container>\n      </ul>\n      <div *ngIf=\"(accountService.currentUser$ | async) === null\" class=\"navbar-nav mr-3 d-xs-none d-none d-md-block\">\n        <a class=\"btn btn-light mr-2 border\" routerLink=\"/user/login\">Entrar</a>\n        <a class=\"btn btn-warning\" routerLink=\"/user/registration\">Me Cadastrar</a>\n      </div>\n      <ul *ngIf=\"(accountService.currentUser$ | async) !== null\" class=\"navbar-nav\">\n        <li class=\"nav-item dropdown\" dropdown *ngIf=\"(accountService.currentUser$ | async) as user\">\n          <a dropdownToggle class=\"nav-link dropdown-toggle\" style=\"cursor: pointer;\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\"\n            aria-haspopup=\"true\" aria-expanded=\"false\">\n            {{ user.userName | titlecase}}\n          </a>\n          <div *dropdownMenu class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdownMenuLink\">\n            <a class=\"dropdown-item\" routerLink=\"user/perfil\">\n              Perfil\n            </a>\n            <div role=\"separator\" class=\"divider\"></div>\n            <a (click)=\"logout()\" class=\"dropdown-item\" style=\"cursor: pointer;\">\n              Sair\n            </a>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { AccountService } from '../../services/account.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss'],\n})\nexport class NavComponent implements OnInit {\n  isCollapsed = true;\n\n  constructor(\n    public accountService: AccountService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  logout(): void {\n    this.accountService.logout();\n    this.router.navigateByUrl('/user/login');\n  }\n\n  showMenu(): boolean {\n    return this.router.url !== '/user/login';\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-titulo [titulo]=\"'Home'\" [iconClass]=\"'fas fa-home'\"></app-titulo>\n","export class Pagination {\n  currentPage: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n  result: T;\n  pagination: Pagination;\n}\n","import { Component, Input, OnInit, TemplateRef } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { RedeSocial } from '@app/models/RedeSocial';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { RedeSocialService } from '@app/services/redeSocial.service';\n\n@Component({\n  selector: 'app-redesSociais',\n  templateUrl: './redesSociais.component.html',\n  styleUrls: ['./redesSociais.component.scss']\n})\nexport class RedesSociaisComponent implements OnInit {\n  modalRef: BsModalRef;\n  @Input() eventoId = 0;\n  public formRS: FormGroup;\n  public redeSocialAtual = { id: 0, nome: '', indice: 0 };\n\n  public get redesSociais(): FormArray {\n    return this.formRS.get('redesSociais') as FormArray;\n  }\n\n  constructor(\n    private fb: FormBuilder,\n    private toastr: ToastrService,\n    private spinner: NgxSpinnerService,\n    private redeSocialService: RedeSocialService,\n    private modalService: BsModalService\n  ) { }\n\n  ngOnInit() {\n    this.carregarRedesSociais(this.eventoId)\n    this.validation();\n  }\n\n  private carregarRedesSociais(id: number = 0): void {\n    let origem = 'palestrante';\n\n    if (this.eventoId !== 0) origem = 'evento';\n\n    this.spinner.show();\n\n    this.redeSocialService\n      .getRedesSociais(origem, id)\n      .subscribe(\n        (redeSocialRetorno: RedeSocial[]) => {\n          redeSocialRetorno.forEach((redeSocial) => {\n            this.redesSociais.push(this.criarRedeSocial(redeSocial))\n          });\n        },\n        (error: any) => {\n          this.toastr.error('Erro ao tentar carregar Rede Social', 'Erro');\n          console.error(error);\n        }\n      ).add(() => this.spinner.hide());\n  }\n\n  public validation(): void {\n    this.formRS = this.fb.group({\n      redesSociais: this.fb.array([])\n    })\n  }\n\n  adicionarRedeSocial(): void {\n    this.redesSociais.push(this.criarRedeSocial({ id: 0 } as RedeSocial));\n  }\n\n  criarRedeSocial(redeSocial: RedeSocial): FormGroup {\n    return this.fb.group({\n      id: [redeSocial.id],\n      nome: [redeSocial.nome, Validators.required],\n      url: [redeSocial.url, Validators.required]\n    });\n  }\n\n  public retornaTitulo(nome: string): string {\n    return nome === null || nome === '' ? 'Rede Social' : nome;\n  }\n\n  public cssValidator(campoForm: FormControl | AbstractControl): any {\n    return { 'is-invalid': campoForm.errors && campoForm.touched };\n  }\n\n  public salvarRedesSociais(): void {\n    let origem = 'palestrante';\n\n    if (this.eventoId !== 0) origem = 'evento';\n\n    if (this.formRS.controls.redesSociais.valid) {\n      this.spinner.show();\n      this.redeSocialService\n        .saveRedesSociais(origem, this.eventoId, this.formRS.value.redesSociais)\n        .subscribe(\n          () => {\n            this.toastr.success('Redes Sociais foram salvas com Sucesso!', 'Sucesso!');\n          },\n          (error: any) => {\n            this.toastr.error('Erro ao tentar salvar Redes Sociais.', 'Erro');\n            console.error(error);\n          }\n        )\n        .add(() => this.spinner.hide());\n    }\n  }\n\n  public removerRedeSocial(template: TemplateRef<any>, indice: number): void {\n    this.redeSocialAtual.id = this.redesSociais.get(indice + '.id').value;\n    this.redeSocialAtual.nome = this.redesSociais.get(indice + '.nome').value;\n    this.redeSocialAtual.indice = indice;\n\n    this.modalRef = this.modalService.show(template, { class: 'modal-sm' });\n  }\n\n  confirmDeleteRedeSocial(): void {\n    let origem = 'palestrante';\n    this.modalRef.hide();\n    this.spinner.show();\n\n    if (this.eventoId !== 0) origem = 'evento';\n\n    this.redeSocialService\n      .deleteRedeSocial(origem, this.eventoId, this.redeSocialAtual.id)\n      .subscribe(\n        () => {\n          this.toastr.success('Rede Social deletado com sucesso', 'Sucesso');\n          this.redesSociais.removeAt(this.redeSocialAtual.indice);\n        },\n        (error: any) => {\n          this.toastr.error(\n            `Erro ao tentar deletar o Rede Social ${this.redeSocialAtual.id}`,\n            'Erro'\n          );\n          console.error(error);\n        }\n      )\n      .add(() => this.spinner.hide());\n  }\n\n  declineDeleteRedeSocial(): void {\n    this.modalRef.hide();\n  }\n\n}\n","<p>Clique em Rede Social para adicionar e preencher novas Redes Sociais</p>\n<div class=\"form-row p-1\">\n  <div [formGroup]=\"formRS\" class=\"col\">\n    <div formArrayName=\"redesSociais\" *ngFor=\"let redeSocial of redesSociais.controls; let i=index\">\n      <fieldset [formGroupName]=\"i\" class=\"form-group\">\n        <legend class=\"d-flex justify-content-between capitalize\">\n          {{ retornaTitulo(redesSociais.get(i+'.nome').value) }}\n          <button class=\"btn btn-sm btn-warning mb-1\" (click)=\"removerRedeSocial(template, i)\">remove</button>\n        </legend>\n        <div class=\"row\">\n          <div class=\"form-group col-md-4\">\n            <label>Nome</label>\n            <select class=\"form-control\" [ngClass]=\"cssValidator(redesSociais.get(i+'.nome'))\" formControlName=\"nome\">\n              <option value=\"\">Selecione</option>\n              <option value=\"fab fa-youtube\">Youtube</option>\n              <option value=\"fab fa-instagram\">Instagram</option>\n              <option value=\"fab fa-facebook\">Facebook</option>\n              <option value=\"fab fa-twitter\">Twitter</option>\n              <option value=\"fab fa-google\">Google</option>\n              <option value=\"fab fa-linkedin\">Linkedin</option>\n              <option value=\"fab fa-pinterest\">Pinterest</option>\n              <option value=\"fab fa-whatsapp\">Whatsapp</option>\n              <option value=\"fab fa-telegram\">Telegram</option>\n              <option value=\"fab fa-skype\">Skype</option>\n              <option value=\"fab fa-vimeo\">Vimeo</option>\n            </select>\n          </div>\n          <div class=\"form-group col-md-8\">\n            <label>Link</label>\n            <input type=\"text\" prefix=\"http://\" mask=\"\" [ngClass]=\"cssValidator(redesSociais.get(i+'.url'))\"\n              formControlName=\"url\" class=\"form-control\" placeholder=\"URL\">\n          </div>\n        </div>\n      </fieldset>\n    </div>\n    <button (click)=\"adicionarRedeSocial()\" class=\"d-flex btn btn-outline-primary\">\n      <i class=\"fa fa-plus-circle my-1\"></i>\n      <b class=\"ml-1\">Rede Social</b>\n    </button>\n  </div>\n</div>\n\n<div class=\"card-footer\">\n  <div class=\"d-flex\">\n    <button class=\"btn btn-outline-secondary mr-auto border\">\n      Cancelar Alteração\n    </button>\n    <button [disabled]=\"!formRS.controls.redesSociais.valid\" (click)=\"salvarRedesSociais()\" class=\"btn btn-success\">\n      Salvar Redes Sociais\n    </button>\n  </div>\n</div>\n\n<ng-template #template>\n  <div class=\"modal-body text-center\">\n    <p>Tem certeza que quer deletar {{this.redeSocialAtual.nome}}?</p>\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"confirmDeleteRedeSocial()\">Sim</button>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"declineDeleteRedeSocial()\">Não</button>\n  </div>\n</ng-template>\n","import { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Component, OnInit, TemplateRef } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { ToastrService } from 'ngx-toastr';\nimport { Evento } from '@app/models/Evento';\nimport { EventoService } from '@app/services/evento.service';\nimport { environment } from '@environments/environment';\nimport { PaginatedResult, Pagination } from '@app/models/Pagination';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-evento-lista',\n  templateUrl: './evento-lista.component.html',\n  styleUrls: ['./evento-lista.component.scss'],\n})\nexport class EventoListaComponent implements OnInit {\n  modalRef: BsModalRef;\n  public eventos: Evento[] = [];\n  public eventoId = 0;\n  public pagination = {} as Pagination;\n\n  public larguraImagem = 150;\n  public margemImagem = 2;\n  public exibirImagem = true;\n\n  termoBuscaChanged: Subject<string> = new Subject<string>();\n\n  public filtrarEventos(evt: any): void {\n    if (this.termoBuscaChanged.observers.length === 0) {\n      this.termoBuscaChanged\n        .pipe(debounceTime(1000))\n        .subscribe((filtrarPor) => {\n          this.spinner.show();\n          this.eventoService\n            .getEventos(\n              this.pagination.currentPage,\n              this.pagination.itemsPerPage,\n              filtrarPor\n            )\n            .subscribe(\n              (paginatedResult: PaginatedResult<Evento[]>) => {\n                this.eventos = paginatedResult.result;\n                this.pagination = paginatedResult.pagination;\n              },\n              (error: any) => {\n                this.spinner.hide();\n                this.toastr.error('Erro ao Carregar os Eventos', 'Erro!');\n              }\n            )\n            .add(() => this.spinner.hide());\n        });\n    }\n    this.termoBuscaChanged.next(evt.value);\n  }\n\n  constructor(\n    private eventoService: EventoService,\n    private modalService: BsModalService,\n    private toastr: ToastrService,\n    private spinner: NgxSpinnerService,\n    private router: Router\n  ) {}\n\n  public ngOnInit(): void {\n    this.pagination = {\n      currentPage: 1,\n      itemsPerPage: 3,\n      totalItems: 1,\n    } as Pagination;\n\n    this.carregarEventos();\n  }\n\n  public alterarImagem(): void {\n    this.exibirImagem = !this.exibirImagem;\n  }\n\n  public mostraImagem(imagemURL: string): string {\n    return imagemURL !== ''\n      ? `${environment.apiURL}resources/images/${imagemURL}`\n      : 'assets/img/semImagem.jpeg';\n  }\n\n  public carregarEventos(): void {\n    this.spinner.show();\n\n    this.eventoService\n      .getEventos(this.pagination.currentPage, this.pagination.itemsPerPage)\n      .subscribe(\n        (paginatedResult: PaginatedResult<Evento[]>) => {\n          this.eventos = paginatedResult.result;\n          this.pagination = paginatedResult.pagination;\n        },\n        (error: any) => {\n          this.spinner.hide();\n          this.toastr.error('Erro ao Carregar os Eventos', 'Erro!');\n        }\n      )\n      .add(() => this.spinner.hide());\n  }\n\n  openModal(event: any, template: TemplateRef<any>, eventoId: number): void {\n    event.stopPropagation();\n    this.eventoId = eventoId;\n    this.modalRef = this.modalService.show(template, { class: 'modal-sm' });\n  }\n\n  public pageChanged(event): void {\n    this.pagination.currentPage = event.page;\n    this.carregarEventos();\n  }\n\n  confirm(): void {\n    this.modalRef.hide();\n    this.spinner.show();\n\n    this.eventoService\n      .deleteEvento(this.eventoId)\n      .subscribe(\n        (result: any) => {\n          if (result.message === 'Deletado') {\n            this.toastr.success(\n              'O Evento foi deletado com Sucesso.',\n              'Deletado!'\n            );\n            this.carregarEventos();\n          }\n        },\n        (error: any) => {\n          console.error(error);\n          this.toastr.error(\n            `Erro ao tentar deletar o evento ${this.eventoId}`,\n            'Erro'\n          );\n        }\n      )\n      .add(() => this.spinner.hide());\n  }\n\n  decline(): void {\n    this.modalRef.hide();\n  }\n\n  detalheEvento(id: number): void {\n    this.router.navigate([`eventos/detalhe/${id}`]);\n  }\n}\n","\n<div class=\"card rounded shadow-sm p-3\">\n\n  <div class=\"d-flex\">\n    <div class=\"flex-fill pr-3\">\n      <div class=\"input-group mb-2\">\n        <div class=\"input-group-prepend\">\n          <div class=\"input-group-text\">Filtro: </div>\n        </div>\n        <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"Filtrar por Tema e Local\"\n        (input)=\"filtrarEventos($event.target)\"\n        >\n      </div>\n    </div>\n    <div>\n      <a class=\"d-flex btn btn-outline-primary\" routerLink=\"/eventos/detalhe\">\n        <i class=\"fa fa-plus-circle my-1\"></i>\n        <b class=\"ml-1 d-none d-sm-block\">Novo</b>\n      </a>\n    </div>\n    </div>\n  <!-- <h3>Filtro: {{filtroLista}}</h3> -->\n  <table class=\"table table-striped table-hover\">\n    <thead class=\"thead-dark\">\n      <tr>\n        <th class=\"d-none d-md-table-cell\">\n          <button type=\"button\" class=\"btn btn-outline-light btn-sm\"\n          (click)=\"alterarImagem()\">\n          <i class=\"{{!exibirImagem ? 'fa fa-eye' : 'fa fa-eye-slash'}}\"></i>\n          {{!exibirImagem ? 'exibir' : 'ocultar'}}\n        </button>\n      </th>\n      <th>#</th>\n      <th>Tema</th>\n      <th class=\"d-none d-md-table-cell\">Local</th>\n      <th>Data</th>\n      <th class=\"d-none d-md-table-cell\">Qtd Pessoas</th>\n      <th class=\"d-none d-md-table-cell\">Lote</th>\n      <th>Opções</th>\n    </tr>\n  </thead>\n  <tbody *ngIf=\"eventos && eventos.length\">\n    <tr *ngFor=\"let evento of eventos\" (click)=\"detalheEvento(evento.id)\" style=\"cursor: pointer;\">\n      <td class=\"d-none d-md-table-cell\">\n        <img [collapse]=\"!exibirImagem\"\n        [isAnimated]=\"true\"\n        [src]=\"mostraImagem(evento.imagemURL)\"\n        [style.width.px]=\"larguraImagem\"\n        [style.margin.px]=\"margemImagem\"\n        >\n      </td>\n      <td>{{evento.id}}</td>\n      <td>{{evento.tema}}</td>\n      <td class=\"d-none d-md-table-cell\">{{evento.local}}</td>\n      <td>{{evento.dataEvento | DateFormatPipe}}</td>\n      <td class=\"d-none d-md-table-cell\">{{evento.qtdPessoas}}</td>\n      <td class=\"d-none d-md-table-cell\">{{evento.lotes[0]?.nome | uppercase}}</td>\n      <td>\n        <button type=\"button\" class=\"btn btn-danger btn-lg\" tooltip=\"Excluir\" (click)=\"openModal($event, template, evento.id)\">\n          <i class=\"fa fa-trash\"></i>\n        </button>\n      </td>\n    </tr>\n  </tbody>\n  <tfoot *ngIf=\"!eventos.length\">\n    <tr>\n      <td colspan=\"8\" class=\"text-center\">\n        <h4>Nenhum evento encontrado!</h4>\n      </td>\n    </tr>\n  </tfoot>\n</table>\n\n<div class=\"d-flex justify-content-center\">\n\n  <pagination\n    [boundaryLinks]=\"true\"\n\n    [totalItems]=\"pagination.totalItems\"\n    [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\"\n    (pageChanged)=\"pageChanged($event)\"\n\n    pageBtnClass=\"btn\"\n    previousText=\"&lsaquo;\"\n    nextText=\"&rsaquo;\"\n    firstText=\"&laquo;\"\n    lastText=\"&raquo;\">\n\n  </pagination>\n\n</div>\n\n</div>\n\n<!-- {{eventos | json}} -->\n\n<ng-template #template>\n  <div class=\"modal-body text-center\">\n    <p>Tem certeza que quer deletar o Evento de Código {{this.eventoId}}?</p>\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"confirm()\">Sim</button>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"decline()\">Não</button>\n  </div>\n</ng-template>\n","import { ValidatorField } from './../../../helpers/ValidatorField';\nimport { AbstractControlOptions, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from '../../../models/identity/User';\nimport { AccountService } from '../../../services/account.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})\nexport class RegistrationComponent implements OnInit {\n\n  user = {} as User;\n  form!: FormGroup;\n\n  constructor(private fb: FormBuilder,\n              private accountService: AccountService,\n              private router: Router,\n              private toaster: ToastrService) { }\n\n  get f(): any { return this.form.controls; }\n\n  ngOnInit(): void {\n    this.validation();\n  }\n\n  private validation(): void {\n\n    const formOptions: AbstractControlOptions = {\n      validators: ValidatorField.MustMatch('password', 'confirmePassword')\n    };\n\n    this.form = this.fb.group({\n      primeiroNome: ['', Validators.required],\n      ultimoNome: ['', Validators.required],\n      email: ['',\n        [Validators.required, Validators.email]\n      ],\n      userName: ['', Validators.required],\n      password: ['',\n        [Validators.required, Validators.minLength(4)]\n      ],\n      confirmePassword: ['', Validators.required],\n    }, formOptions);\n  }\n\n  register(): void {\n    this.user = { ...this.form.value };\n    this.accountService.register(this.user).subscribe(\n      () => this.router.navigateByUrl('/dashboard'),\n      (error: any) => this.toaster.error(error.error)\n    )\n  }\n\n}\n","<div class=\"row mt-4\">\n\n\t<div class=\"col-md-6 d-none d-md-block\" style=\"height: 450px;\">\n\t\t<div class=\"text-center col-md-12 my-auto side-heder\">\n\t\t\t<h1>Cadastro de Usuário</h1>\n\t\t\t<img src=\"../../../../assets/registerImage.png\" class=\"my-4\" alt=\"\" width=\"400px\">\n\t\t</div>\n\t</div>\n\n\t<div class=\"col-md-6\">\n\n    <form [formGroup]=\"form\" class=\"p-1\" (ngSubmit)=\"register()\">\n      <div class=\"pb-2 d-block d-md-none\">\n        <h3 class=\"border-bottom\">Cadastro de Usuário</h3>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-sm-6\">\n          <label>Primeiro Nome</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"primeiroNome\"\n            [ngClass]=\"{'is-invalid': f.primeiroNome.errors && f.primeiroNome.touched}\" placeholder=\"Insira o Primeiro nome\" />\n          <div class=\"invalid-feedback\">\n            Primeiro Nome é obrigatório.\n          </div>\n        </div>\n        <div class=\"form-group col-sm-6\">\n          <label>Último nome</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"ultimoNome\"\n            [ngClass]=\"{'is-invalid': f.ultimoNome.errors && f.ultimoNome.touched}\" placeholder=\"Insira o Último nome\" />\n          <div class=\"invalid-feedback\">\n            Último Nome é obrigatório.\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"\">Email:</label>\n        <input class=\"form-control\" type=\"text\" formControlName=\"email\"\n          [ngClass]=\"{'is-invalid': f.email.errors && f.email.touched}\" placeholder=\"Insira o Nome Completo\" />\n        <div *ngIf=\"f.email.errors?.required && f.email.touched\" class=\"invalid-feedback\">\n          e-mail é obrigatório.\n        </div>\n        <div *ngIf=\"f.email.errors?.email && f.email.touched\" class=\"invalid-feedback\">\n          Deve ser um e-mail válido.\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"\">Usuario:</label>\n        <input class=\"form-control\" type=\"text\" formControlName=\"userName\"\n          [ngClass]=\"{'is-invalid': f.userName.errors && f.userName.touched}\" placeholder=\"Insira o nome de Usuário\" />\n        <div class=\"invalid-feedback\">\n          Usuário é obrigatório.\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-sm-6\">\n          <label for=\"\">Senha:</label>\n          <input class=\"form-control\" type=\"password\" formControlName=\"password\"\n            [ngClass]=\"{'is-invalid': f.password.errors && f.password.touched}\" placeholder=\"Digite uma Senha\" />\n          <div *ngIf=\"f.password.errors?.required && f.password.touched\"\n          class=\"invalid-feedback\">\n            Senha é obrigatório.\n          </div>\n          <div *ngIf=\"f.password.errors?.minlength && f.password.touched\"\n          class=\"invalid-feedback\">\n            Deve conter no mínimo 6 caracteres.\n          </div>\n        </div>\n        <div class=\"form-group col-sm-6\">\n          <label for=\"\">Confirmar Senha:</label>\n          <input class=\"form-control\" type=\"password\" formControlName=\"confirmePassword\"\n            [ngClass]=\"{'is-invalid': f.confirmePassword.errors && f.confirmePassword.touched}\" placeholder=\"Confirme a Senha\" />\n          <div *ngIf=\"f.confirmePassword.errors?.required\"\n            class=\"invalid-feedback\">\n            Confirmar Senha é obrigatório.\n          </div>\n          <div *ngIf=\"f.confirmePassword.errors?.mustMatch\"\n            class=\"invalid-feedback\">\n            Repedir a senha é obrigatório.\n          </div>\n        </div>\n      </div>\n      <div class=\"form-row p-1 mb-3\">\n        <div class=\"custom-control custom-checkbox\">\n          <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\n          <label class=\"custom-control-label\">Eu concordo com os <a href=\"#\">Termos de Uso</a>.</label>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-12\">\n          <button [disabled]=\"!form.valid\" class=\"btn btn-lg btn-success btn-block px-5\" type=\"submit\">\n            Registar\n          </button>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-12\">\n          <a class=\"btn btn-link btn-block\" routerLink=\"/user/login\">\n            Já sou Cadastrado\n          </a>\n        </div>\n      </div>\n    </form>\n\n\t</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-titulo [titulo]=\"'Dashboard'\" [iconClass]=\"'far fa-chart-bar'\"></app-titulo>\n\n","import { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Component, OnInit, TemplateRef } from '@angular/core';\nimport { AbstractControl,\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { BsLocaleService } from 'ngx-bootstrap/datepicker';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\nimport { LoteService } from './../../../services/lote.service';\nimport { EventoService } from '@app/services/evento.service';\nimport { Evento } from '@app/models/Evento';\nimport { Lote } from '@app/models/Lote';\nimport { DatePipe } from '@angular/common';\nimport { environment } from '@environments/environment';\n\n@Component({\n  selector: 'app-evento-detalhe',\n  templateUrl: './evento-detalhe.component.html',\n  styleUrls: ['./evento-detalhe.component.scss'],\n  providers: [DatePipe],\n})\nexport class EventoDetalheComponent implements OnInit {\n  modalRef: BsModalRef;\n  eventoId: number;\n  evento = {} as Evento;\n  form: FormGroup;\n  estadoSalvar = 'post';\n  loteAtual = { id: 0, nome: '', indice: 0 };\n  imagemURL = 'assets/img/upload.png';\n  file: File;\n\n  get modoEditar(): boolean {\n    return this.estadoSalvar === 'put';\n  }\n\n  get lotes(): FormArray {\n    return this.form.get('lotes') as FormArray;\n  }\n\n  get f(): any {\n    return this.form.controls;\n  }\n\n  get bsConfig(): any {\n    return {\n      adaptivePosition: true,\n      dateInputFormat: 'DD/MM/YYYY hh:mm a',\n      containerClass: 'theme-default',\n      showWeekNumbers: false,\n    };\n  }\n\n  constructor(\n    private fb: FormBuilder,\n    private localeService: BsLocaleService,\n    private activatedRouter: ActivatedRoute,\n    private eventoService: EventoService,\n    private spinner: NgxSpinnerService,\n    private toastr: ToastrService,\n    private modalService: BsModalService,\n    private router: Router,\n    private loteService: LoteService,\n    private datePipe: DatePipe\n  ) {\n    this.localeService.use('pt-br');\n  }\n\n  public carregarEvento(): void {\n    this.eventoId = +this.activatedRouter.snapshot.paramMap.get('id');\n\n    if (this.eventoId !== null && this.eventoId !== 0) {\n      this.spinner.show();\n\n      this.estadoSalvar = 'put';\n\n      this.eventoService\n        .getEventoById(this.eventoId)\n        .subscribe(\n          (evento: Evento) => {\n            this.evento = { ...evento };\n            this.form.patchValue(this.evento);\n            if (this.evento.imagemURL !== '') {\n              this.imagemURL = environment.apiURL + 'resources/images/' + this.evento.imagemURL;\n            }\n            this.carregarLotes();\n          },\n          (error: any) => {\n            this.toastr.error('Erro ao tentar carregar Evento.', 'Erro!');\n            console.error(error);\n          }\n        )\n        .add(() => this.spinner.hide());\n    }\n  }\n\n  public carregarLotes(): void {\n    this.loteService\n      .getLotesByEventoId(this.eventoId)\n      .subscribe(\n        (lotesRetorno: Lote[]) => {\n          lotesRetorno.forEach((lote) => {\n            this.lotes.push(this.criarLote(lote));\n          });\n        },\n        (error: any) => {\n          this.toastr.error('Erro ao tentar carregar lotes', 'Erro');\n          console.error(error);\n        }\n      )\n      .add(() => this.spinner.hide());\n  }\n\n  ngOnInit(): void {\n    this.carregarEvento();\n    this.validation();\n  }\n\n  public validation(): void {\n    this.form = this.fb.group({\n      tema: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(4),\n          Validators.maxLength(50),\n        ],\n      ],\n      local: ['', Validators.required],\n      dataEvento: ['', Validators.required],\n      qtdPessoas: ['', [Validators.required, Validators.max(120000)]],\n      telefone: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      imagemURL: [''],\n      lotes: this.fb.array([]),\n    });\n  }\n\n  adicionarLote(): void {\n    this.lotes.push(this.criarLote({ id: 0 } as Lote));\n  }\n\n  criarLote(lote: Lote): FormGroup {\n    return this.fb.group({\n      id: [lote.id],\n      nome: [lote.nome, Validators.required],\n      quantidade: [lote.quantidade, Validators.required],\n      preco: [lote.preco, Validators.required],\n      dataInicio: [lote.dataInicio],\n      dataFim: [lote.dataFim],\n    });\n  }\n\n  public mudarValorData(value: Date, indice: number, campo: string): void {\n    this.lotes.value[indice][campo] = value;\n  }\n\n  public retornaTituloLote(nome: string): string {\n    return nome === null || nome === '' ? 'Nome do lote' : nome;\n  }\n\n  public resetForm(): void {\n    this.form.reset();\n  }\n\n  public cssValidator(campoForm: FormControl | AbstractControl): any {\n    return { 'is-invalid': campoForm.errors && campoForm.touched };\n  }\n\n  public salvarEvento(): void {\n    this.spinner.show();\n    if (this.form.valid) {\n      this.evento =\n        this.estadoSalvar === 'post'\n          ? { ...this.form.value }\n          : { id: this.evento.id, ...this.form.value };\n\n      this.eventoService[this.estadoSalvar](this.evento).subscribe(\n        (eventoRetorno: Evento) => {\n          this.toastr.success('Evento salvo com Sucesso!', 'Sucesso');\n          this.router.navigate([`eventos/detalhe/${eventoRetorno.id}`]);\n        },\n        (error: any) => {\n          console.error(error);\n          this.spinner.hide();\n          this.toastr.error('Error ao salvar evento', 'Erro');\n        },\n        () => this.spinner.hide()\n      );\n    }\n  }\n\n  public salvarLotes(): void {\n    if (this.form.controls.lotes.valid) {\n      this.spinner.show();\n      this.loteService\n        .saveLote(this.eventoId, this.form.value.lotes)\n        .subscribe(\n          () => {\n            this.toastr.success('Lotes salvos com Sucesso!', 'Sucesso!');\n          },\n          (error: any) => {\n            this.toastr.error('Erro ao tentar salvar lotes.', 'Erro');\n            console.error(error);\n          }\n        )\n        .add(() => this.spinner.hide());\n    }\n  }\n\n  public removerLote(template: TemplateRef<any>, indice: number): void {\n    this.loteAtual.id = this.lotes.get(indice + '.id').value;\n    this.loteAtual.nome = this.lotes.get(indice + '.nome').value;\n    this.loteAtual.indice = indice;\n\n    this.modalRef = this.modalService.show(template, { class: 'modal-sm' });\n  }\n\n  confirmDeleteLote(): void {\n    this.modalRef.hide();\n    this.spinner.show();\n\n    this.loteService\n      .deleteLote(this.eventoId, this.loteAtual.id)\n      .subscribe(\n        () => {\n          this.toastr.success('Lote deletado com sucesso', 'Sucesso');\n          this.lotes.removeAt(this.loteAtual.indice);\n        },\n        (error: any) => {\n          this.toastr.error(\n            `Erro ao tentar deletar o Lote ${this.loteAtual.id}`,\n            'Erro'\n          );\n          console.error(error);\n        }\n      )\n      .add(() => this.spinner.hide());\n  }\n\n  declineDeleteLote(): void {\n    this.modalRef.hide();\n  }\n\n  onFileChange(ev: any): void {\n    const reader = new FileReader();\n\n    reader.onload = (event: any) => this.imagemURL = event.target.result;\n\n    this.file = ev.target.files;\n    reader.readAsDataURL(this.file[0]);\n\n    this.uploadImagem();\n  }\n\n  uploadImagem(): void {\n    this.spinner.show();\n    this.eventoService.postUpload(this.eventoId, this.file).subscribe(\n      () => {\n        this.carregarEvento();\n        this.toastr.success('Imagem atualizada com Sucesso', 'Sucesso!');\n      },\n      (error: any) => {\n        this.toastr.error('Erro ao fazer upload de imagem', 'Erro!');\n        console.log(error);\n      }\n    ).add(() => this.spinner.hide());\n  }\n\n}\n","<div class=\"row\">\n  <div [ngClass]=\"{'col-md-8 pr-0': modoEditar, 'col-md-12': !modoEditar}\">\n    <div class=\"card rounded shadow-sm\">\n      <form [formGroup]=\"form\">\n        <div class=\"p-3\">\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-12\">\n              <label>Tema</label>\n              <input type=\"text\" class=\"form-control\" [ngClass]=\"cssValidator(f.tema)\" formControlName=\"tema\"\n              placeholder=\"Insira o Tema\" [(ngModel)]=\"evento.tema\">\n              <div *ngIf=\"f.tema.errors?.required\" class=\"invalid-feedback\">\n                Tema é obrigatório.\n              </div>\n              <div *ngIf=\"f.tema.errors?.minlength\" class=\"invalid-feedback\">\n                Tema deve ter no mínimo 4 caracteres.\n              </div>\n              <div *ngIf=\"f.tema.errors?.maxlength\" class=\"invalid-feedback\">\n                Tema deve ter no máximo 50 caracteres.\n              </div>\n            </div>\n          </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-8\">\n              <label>Local</label>\n              <input type=\"text\" class=\"form-control\" [ngClass]=\"cssValidator(f.local)\"\n              formControlName=\"local\" placeholder=\"\" [(ngModel)]=\"evento.local\">\n              <div *ngIf=\"f.local.errors?.required && f.local.touched\" class=\"invalid-feedback\">\n                Local é obrigatório.\n              </div>\n            </div>\n            <div class=\"form-group col-md-4\">\n              <label>Data e Hora</label>\n              <input type=\"datetime\" class=\"form-control\" [ngClass]=\"cssValidator(f.dataEvento)\"\n              value=\"{{evento.dataEvento | DateFormatPipe}}\" bsDatepicker [bsConfig]=\"bsConfig\" formControlName=\"dataEvento\"\n              placeholder=\"\" [(ngModel)]=\"evento.dataEvento\">\n              <div *ngIf=\"f.dataEvento.errors?.required && f.dataEvento.touched\" class=\"invalid-feedback\">\n                Data e Hora é obrigatório.\n              </div>\n            </div>\n          </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col-md-2\">\n              <label>Qtd Pessoas</label>\n              <input type=\"number\" class=\"form-control\" [ngClass]=\"cssValidator(f.qtdPessoas)\" formControlName=\"qtdPessoas\"\n              placeholder=\"\" [(ngModel)]=\"evento.qtdPessoas\">\n              <div *ngIf=\"f.qtdPessoas.errors?.required && f.qtdPessoas.touched\" class=\"invalid-feedback\">\n                Qtd Pessoas é obrigatório.\n              </div>\n              <div *ngIf=\"f.qtdPessoas.errors?.max && f.qtdPessoas.touched\" class=\"invalid-feedback\">\n                Qtd Pessoas deve ser menor que 120000.\n              </div>\n            </div>\n            <div class=\"form-group col-md-4\">\n              <label>Telefone</label>\n              <input type=\"text\" class=\"form-control\" [ngClass]=\"cssValidator(f.telefone)\"\n              formControlName=\"telefone\" placeholder=\"(000) 90000-0000\" [(ngModel)]=\"evento.telefone\">\n              <div *ngIf=\"f.telefone.errors?.required && f.telefone.touched\" class=\"invalid-feedback\">\n                Telefone é obrigatório.\n              </div>\n            </div>\n            <div class=\"form-group col-md-6\">\n              <label>e-mail</label>\n              <input type=\"text\" class=\"form-control\" [ngClass]=\"cssValidator(f.email)\"\n              formControlName=\"email\" placeholder=\"e-mail\" [(ngModel)]=\"evento.email\">\n              <div *ngIf=\"f.email.errors?.required && f.email.touched\" class=\"invalid-feedback\">\n                e-mail é obrigatório.\n              </div>\n              <div *ngIf=\"f.email.errors?.email && f.email.touched\" class=\"invalid-feedback\">\n                Deve ser um endereço de e-mail válido\n              </div>\n            </div>\n\n          </div>\n        </div>\n        <div class=\"card-footer\">\n          <div class=\"d-flex\">\n            <button class=\"btn btn-outline-secondary mr-auto border\" (click)=\"resetForm()\">\n              Cancelar Alteração\n            </button>\n            <button class=\"btn btn-success\" [disabled]=\"!form.valid\" (click)=\"salvarEvento()\">\n              <!-- <span class=\"spinner-border spinner-border-sm mr-1\"></span> -->\n              Salvar Evento\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n    <div class=\"card rounded shadow-sm mt-3\" *ngIf=\"modoEditar\">\n      <div class=\"p-3\">\n        <div class=\"d-flex border-bottom\">\n          <h2 class=\"mr-auto\">\n            Lotes do Evento\n          </h2>\n          <h2>\n            <i class=\"fas fa-money-bill-wave\"></i>\n          </h2>\n        </div>\n        <p>Clique em Lote para adicionar e preencher novos Lotes</p>\n        <div class=\"form-row p-1\">\n          <div [formGroup]=\"form\" class=\"col\">\n            <div formArrayName=\"lotes\" *ngFor=\"let lote of lotes.controls; let i=index\">\n              <fieldset [formGroupName]=\"i\" class=\"form-group\">\n                <legend class=\"d-flex justify-content-between capitalize\">\n                  {{ retornaTituloLote(lotes.get(i+'.nome').value) }}\n                  <button (click)=\"removerLote(template, i)\" class=\"p-2 btn btn-sm btn-outline-warning mb-1 d-flex\" tooltip=\"Excluir Lote\"\n                  [adaptivePosition]=\"false\" [delay]=\"500\" placement=\"left\">\n                  <i class=\"fa fa-window-close my-1\"></i>\n                  <b class=\"ml-1 d-none d-sm-block\">Excluir</b>\n                </button>\n              </legend>\n              <div class=\"row\">\n                <div class=\"form-group col-md-4\">\n                  <label>Nome</label>\n                  <input\n                  [ngClass]=\"cssValidator(lotes.get(i+'.nome'))\"\n                  type=\"text\"\n                  class=\"form-control\"\n                  formControlName=\"nome\"\n                  placeholder=\"Lote\">\n                </div>\n                <div class=\"form-group col-md-4\">\n                  <label>Quantidade</label>\n                  <input type=\"text\" class=\"form-control\"\n                  [ngClass]=\"cssValidator(lotes.get(i+'.quantidade'))\"\n                  formControlName=\"quantidade\"\n                  placeholder=\"000\">\n                </div>\n                <div class=\"form-group col-md-4\">\n                  <label>Preço</label>\n                  <input type=\"text\"\n                  currencyMask\n                  [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',', align: 'left' }\"\n                  class=\"form-control\"\n                  [ngClass]=\"cssValidator(lotes.get(i+'.preco'))\"\n                  formControlName=\"preco\"\n                  placeholder=\"R$ 0,00\">\n                </div>\n                <div class=\"form-group col-md-4\">\n                  <label>Data Início</label>\n                  <input type=\"datetime\" class=\"form-control\"\n                  bsDatepicker\n                  value=\"{{lotes.get(i+'.dataInicio').value | date:'dd/MM/yyyy'}}\"\n                  placeholder=\"01/01/2019\"\n                  (bsValueChange)=\"mudarValorData($event, i, 'dataInicio')\">\n                </div>\n                <div class=\"form-group col-md-4\">\n                  <label>Data Fim</label>\n                  <input type=\"datetime\" class=\"form-control\"\n                  bsDatepicker\n                  value=\"{{lotes.get(i+'.dataFim').value | date:'dd/MM/yyyy'}}\"\n                  placeholder=\"01/01/2019\"\n                  (bsValueChange)=\"mudarValorData($event, i, 'dataFim')\">\n                </div>\n              </div>\n            </fieldset>\n          </div>\n        </div>\n      </div>\n      <button (click)=\"adicionarLote()\" class=\"d-flex btn btn-outline-primary\">\n        <i class=\"fa fa-plus-circle my-1\"></i>\n        <b class=\"ml-1\">Lote</b>\n      </button>\n    </div>\n    <div class=\"card-footer\">\n      <div class=\"d-flex\">\n        <button class=\"btn btn-outline-secondary mr-auto border\">\n          Cancelar Alteração\n        </button>\n        <button [disabled]=\"!form.controls.lotes.valid\" (click)=\"salvarLotes()\" class=\"btn btn-success\">\n          Salvar Lotes\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"card rounded shadow-sm mt-3\" *ngIf=\"modoEditar\">\n    <div class=\"p-3\">\n      <div class=\"d-flex border-bottom\">\n        <h2 class=\"mr-auto\">\n          Redes Sociais do Evento\n        </h2>\n        <h2>\n          <i class=\"fas fa-share-square\"></i>\n        </h2>\n      </div>\n      <app-redesSociais [eventoId]=\"eventoId\"></app-redesSociais>\n    </div>\n  </div>\n\n\n</div>\n<div class=\"col-md-4\" *ngIf=\"modoEditar\">\n  <div [formGroup]=\"form\" class=\"card-evento-view shadow-sm\">\n    <div class=\"form-row\">\n      <div class=\"form-group m-0\">\n        <input type=\"file\" #file (change)=\"onFileChange($event)\" class=\"form-control is-invalid\" placeholder=\"\" style=\"display: none\">\n      </div>\n    </div>\n    <div class=\"card profile-card-2\">\n      <div class=\"card-img-block\">\n        <img class=\"image\" [src]=\"imagemURL\" class=\"img-fluid\" (click)=\"file.click()\" alt=\"Card image cap\"\n        tooltip=\"Uplaod de Nova Imagem\" [adaptivePosition]=\"false\" placement=\"bottom\" />\n      </div>\n      <div class=\"card-body pt-3\">\n        <h4>{{evento.tema}}</h4>\n        <p class=\"card-text\">\n          <b>Local:</b> {{evento.local}}\n          <br>\n          <b>Data:</b> {{evento.dataEvento | DateFormatPipe}}\n        </p>\n        <hr>\n        <p class=\"card-text\">\n          <b>Contatos</b><br>\n          <small class=\"text-muted\">Telefone: {{evento.telefone}}</small>\n          <br>\n          <small class=\"text-muted\">e-mail: {{evento.email}}</small>\n        </p>\n        <p class=\"card-text\">\n          Capacidade:\n          <small class=\"text-muted\">{{evento.qtdPessoas}}</small>\n        </p>\n        <div class=\"row\">\n          <div class=\"icon-block col-md-8 iconesSociais\">\n            <a href=\"\">\n              <i class=\"\"></i>\n            </a>\n          </div>\n          <!--div class=\"col-md-4 d-flex justify-content-center\">\n            <a href=\"#\" class=\"btn btn-outline-primary\">Participar</a>\n          </div-->\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n\n<br>\n\n<ng-template #template>\n  <div class=\"modal-body text-center\">\n    <p>Tem certeza que quer deletar o lote {{this.loteAtual.nome}}?</p>\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"confirmDeleteLote()\">Sim</button>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"declineDeleteLote()\">Não</button>\n  </div>\n</ng-template>\n","import { AbstractControl, FormGroup } from '@angular/forms';\n\nexport class ValidatorField {\n  static MustMatch(controlName: string, matchingControlName: string): any {\n    return (group: AbstractControl) => {\n      const formGroup = group as FormGroup;\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchingControlName];\n\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n        return null;\n      }\n\n      if (control.value !== matchingControl.value) {\n        matchingControl.setErrors({ mustMatch: true});\n      } else {\n        matchingControl.setErrors(null);\n      }\n\n      return null;\n    };\n  }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { AbstractControlOptions, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ValidatorField } from '@app/helpers/ValidatorField';\nimport { UserUpdate } from '@app/models/identity/UserUpdate';\nimport { AccountService } from '@app/services/account.service';\nimport { PalestranteService } from '@app/services/palestrante.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-perfil-detalhe',\n  templateUrl: './perfil-detalhe.component.html',\n  styleUrls: ['./perfil-detalhe.component.scss']\n})\nexport class PerfilDetalheComponent implements OnInit {\n  @Output() changeFormValue = new EventEmitter();\n\n  userUpdate = {} as UserUpdate;\n  form!: FormGroup;\n\n  constructor( private fb: FormBuilder,\n    public accountService: AccountService,\n    public palestranteService: PalestranteService,\n    private router: Router,\n    private toaster: ToastrService,\n    private spinner: NgxSpinnerService\n  ) { }\n\n  ngOnInit() {\n    this.validation();\n    this.carregarUsuario();\n    this.verificaForm();\n  }\n\n  private verificaForm(): void {\n    this.form.valueChanges\n      .subscribe(() => this.changeFormValue.emit({...this.form.value}))\n  }\n\n  private carregarUsuario(): void {\n    this.spinner.show();\n    this.accountService\n      .getUser()\n      .subscribe(\n        (userRetorno: UserUpdate) => {\n          console.log(userRetorno);\n          this.userUpdate = userRetorno;\n          this.form.patchValue(this.userUpdate);\n          this.toaster.success('Usuário Carregado', 'Sucesso');\n        },\n        (error) => {\n          console.error(error);\n          this.toaster.error('Usuário não Carregado', 'Erro');\n          this.router.navigate(['/dashboard']);\n        }\n      )\n      .add(this.spinner.hide());\n  }\n\n  private validation(): void {\n    const formOptions: AbstractControlOptions = {\n      validators: ValidatorField.MustMatch('password', 'confirmePassword'),\n    };\n\n    this.form = this.fb.group(\n      {\n        userName: [''],\n        imagemURL: [''],\n        titulo: ['NaoInformado', Validators.required],\n        primeiroNome: ['', Validators.required],\n        ultimoNome: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        phoneNumber: ['', [Validators.required]],\n        descricao: ['', Validators.required],\n        funcao: ['NaoInformado', Validators.required],\n        password: ['', [Validators.minLength(4), Validators.nullValidator]],\n        confirmePassword: ['', Validators.nullValidator],\n      },\n      formOptions\n    );\n  }\n\n  // Conveniente para pegar um FormField apenas com a letra F\n  get f(): any {\n    return this.form.controls;\n  }\n\n  onSubmit(): void {\n    this.atualizarUsuario();\n  }\n\n  public atualizarUsuario() {\n    this.userUpdate = { ...this.form.value };\n    this.spinner.show();\n\n    if (this.f.funcao.value == 'Palestrante') {\n      this.palestranteService.post().subscribe(\n        () => this.toaster.success('Função palestrante Ativada!', 'Sucesso!'),\n        (error) => {\n          this.toaster.error('A função palestrante não pode ser Ativada', 'Error');\n          console.error(error);\n        }\n      )\n    }\n\n    this.accountService\n      .updateUser(this.userUpdate)\n      .subscribe(\n        () => this.toaster.success('Usuário atualizado!', 'Sucesso'),\n        (error) => {\n          this.toaster.error(error.error);\n          console.error(error);\n        }\n      )\n      .add(() => this.spinner.hide());\n  }\n\n  public resetForm(event: any): void {\n    event.preventDefault();\n    this.form.reset();\n  }\n\n}\n","<form [formGroup]=\"form\" (submit)=\"onSubmit()\">\n  <div class=\"form-row\">\n    <div class=\"form-group col-12\">\n      <h3 class=\"border-bottom\">Detalhe Perfil</h3>\n    </div>\n    <div class=\"form-group col\">\n      <label>Título</label>\n      <select formControlName=\"titulo\" class=\"form-control\"\n      [ngClass]=\"{ 'is-invalid': f.titulo.errors && f.titulo.touched }\">\n      <option value=\"NaoInformado\">Não Quero</option>\n      <option value=\"Tecnologo\">Tecnólogo(a)</option>\n      <option value=\"Bacharel\">Bacharel</option>\n      <option value=\"Especialista\">Especialista</option>\n      <option value=\"PosGraduado\">Pós Graduado(a)</option>\n      <option value=\"Mestrado\">Mestre</option>\n      <option value=\"Doutorado\">Doutor(a)</option>\n      <option value=\"PosDoutorado\">Pós Doc</option>\n    </select>\n    <div *ngIf=\"f.titulo.errors && f.titulo.touched\" class=\"invalid-feedback\">\n      <div *ngIf=\"f.titulo.errors.required\">Título é obrigatório</div>\n    </div>\n  </div>\n  <div class=\"form-group col-sm-5\">\n    <label>Primeiro Nome</label>\n    <input type=\"text\" formControlName=\"primeiroNome\" class=\"form-control\"\n    [ngClass]=\"{ 'is-invalid': f.primeiroNome.errors && f.primeiroNome.touched }\" />\n    <div *ngIf=\"f.primeiroNome.errors && f.primeiroNome.touched\" class=\"invalid-feedback\">\n      <div *ngIf=\"f.primeiroNome.errors.required\">Primeiro nome é obrigatório</div>\n    </div>\n  </div>\n  <div class=\"form-group col-sm-5\">\n    <label>Último nome</label>\n    <input type=\"text\" formControlName=\"ultimoNome\" class=\"form-control\"\n    [ngClass]=\"{ 'is-invalid': f.ultimoNome.errors && f.ultimoNome.touched }\" />\n    <div *ngIf=\"f.ultimoNome.errors && f.ultimoNome.touched\" class=\"invalid-feedback\">\n      <div *ngIf=\"f.ultimoNome.errors.required\">Último nome é obrigatório</div>\n    </div>\n  </div>\n</div>\n<div class=\"form-row\">\n  <div class=\"form-group col-sm-5\">\n    <label>E-mail</label>\n    <input type=\"text\" formControlName=\"email\" class=\"form-control\"\n    [ngClass]=\"{ 'is-invalid': f.email.errors && f.email.touched }\" />\n    <div *ngIf=\"f.email.errors && f.email.touched\" class=\"invalid-feedback\">\n      <div *ngIf=\"f.email.errors.required\">e-mail é obrigatório</div>\n      <div *ngIf=\"f.email.errors.email\">e-mail precisa ser um endereço válido.</div>\n    </div>\n  </div>\n  <div class=\"form-group col-sm-4\">\n    <label>Telefone</label>\n    <input type=\"text\" formControlName=\"phoneNumber\" class=\"form-control\"\n    [ngClass]=\"{ 'is-invalid': f.phoneNumber.errors && f.phoneNumber.touched }\" />\n    <div *ngIf=\"f.phoneNumber.errors && f.phoneNumber.touched\" class=\"invalid-feedback\">\n      <div *ngIf=\"f.phoneNumber.errors.required\">Telefone é obrigatório</div>\n    </div>\n  </div>\n  <div class=\"form-group col-sm\">\n    <label>Função</label>\n    <select formControlName=\"funcao\" class=\"form-control\"\n    [ngClass]=\"{ 'is-invalid': f.funcao.errors && f.funcao.touched }\">\n    <option value=\"NaoInformado\">Não Informado</option>\n    <option value=\"Participante\">Participante</option>\n    <option value=\"Palestrante\">Palestrante</option>\n  </select>\n  <div *ngIf=\"f.funcao.errors && f.funcao.touched\" class=\"invalid-feedback\">\n    <div *ngIf=\"f.funcao.errors.required\">função é obrigatório é obrigatório</div>\n  </div>\n</div>\n<div class=\"form-group col-12\">\n  <label>Descrição</label>\n  <input type=\"text\" formControlName=\"descricao\" class=\"form-control\"\n  [ngClass]=\"{ 'is-invalid': f.descricao.errors && f.descricao.touched }\" />\n  <div *ngIf=\"f.descricao.errors && f.descricao.touched\" class=\"invalid-feedback\">\n    <div *ngIf=\"f.descricao.errors.required\">Descrição é obrigatório</div>\n  </div>\n</div>\n</div>\n<div>\n  <h3 class=\"pt-3 border-bottom\">Mudar Senha</h3>\n  <p>Caso mude de senha, preencha os campos abaixo:</p>\n</div>\n<div class=\"form-row\">\n  <div class=\"form-group col-sm\">\n    <label>Senha</label>\n    <input type=\"password\" formControlName=\"password\" class=\"form-control\"\n    [ngClass]=\"{ 'is-invalid': f.password.errors && f.password.touched }\" />\n    <div *ngIf=\"f.password.errors && f.password.touched\" class=\"invalid-feedback\">\n      <div *ngIf=\"f.password.errors.required\">Senha é obrigatório</div>\n      <div *ngIf=\"f.password.errors.minlength\">Senha precisa ter pelo menos 6 caracteres</div>\n    </div>\n  </div>\n  <div class=\"form-group col-sm\">\n    <label>Confirmar Senha</label>\n    <input type=\"password\" formControlName=\"confirmePassword\" class=\"form-control\"\n    [ngClass]=\"{ 'is-invalid': f.confirmePassword.errors && f.confirmePassword.touched }\" />\n    <div *ngIf=\"f.confirmePassword.errors && f.confirmePassword.touched\" class=\"invalid-feedback\">\n      <div *ngIf=\"f.confirmePassword.errors.required\">Confirmação de senha é Obrigatório</div>\n      <div *ngIf=\"f.confirmePassword.errors.mustMatch\">Repedir a senha é obrigatório.</div>\n    </div>\n  </div>\n</div>\n\n<div class=\"card-footer\">\n  <div class=\"d-flex\">\n    <button (click)=\"resetForm($event)\" class=\"btn btn-outline-secondary mr-auto border\">\n      Cancelar Alteração\n    </button>\n    <button class=\"btn btn-success\" type=\"submit\">\n      Salvar Alteração\n    </button>\n  </div>\n</div>\n</form>\n","import { Component } from '@angular/core';\nimport { User } from './models/identity/User';\nimport { AccountService } from './services/account.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  constructor(public accountService: AccountService) {}\n\n  ngOnInit(): void {\n    this.setCurrentUser();\n  }\n\n  setCurrentUser(): void {\n    let user: User;\n\n    if (localStorage.getItem('user'))\n      user = JSON.parse(localStorage.getItem('user') ?? '{}');\n    else\n      user = null\n\n    if (user)\n      this.accountService.setCurrentUser(user);\n  }\n\n}\n","<app-nav></app-nav>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n\n<ngx-spinner\n  bdColor=\"rgba(51,51,51,0.8)\"\n  size=\"medium\"\n  color=\"#fff\"\n  type=\"ball-scale-multiple\"\n>\n  <p style=\"font-size: 20px; color: white;\">Carregando...</p>\n</ngx-spinner>\n","<div class=\"d-flex p-3 my-3 text-white bg-secondary rounded shadow-sm\">\n  <div class=\"d-flex align-items-center mr-auto\">\n    <i class=\"{{iconClass}} mr-3\"></i>\n    <div class=\"lh-100\">\n      <h2 class=\"mb-0\">{{titulo}}</h2>\n      <small>{{subtitulo}}</small>\n    </div>\n  </div>\n  <div class=\"p-3\" *ngIf=\"botaoListar\">\n    <button class=\"btn btn-outline-light\" (click)=\"listar()\">\n      Listar {{titulo}}\n    </button>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-titulo',\n  templateUrl: './titulo.component.html',\n  styleUrls: ['./titulo.component.scss'],\n})\nexport class TituloComponent implements OnInit {\n  @Input() titulo: string;\n  @Input() iconClass = 'fa fa-user';\n  @Input() subtitulo = 'Desde 2021';\n  @Input() botaoListar = false;\n\n  constructor(private router: Router) {}\n\n  ngOnInit(): void {}\n\n  listar(): void {\n    this.router.navigate([`/${this.titulo.toLocaleLowerCase()}/lista`]);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\n\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { defineLocale } from 'ngx-bootstrap/chronos';\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\nimport { NgxCurrencyModule } from 'ngx-currency';\n\nimport { ToastrModule } from 'ngx-toastr';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ContatosComponent } from './components/contatos/contatos.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { EventosComponent } from './components/eventos/eventos.component';\nimport { PalestrantesComponent } from './components/palestrantes/palestrantes.component';\nimport { PalestranteDetalheComponent } from './components/palestrantes/palestrante-detalhe/palestrante-detalhe.component';\nimport { PalestranteListaComponent } from './components/palestrantes/palestrante-lista/palestrante-lista.component';\nimport { PerfilComponent } from './components/user/perfil/perfil.component';\nimport { PerfilDetalheComponent } from './components/user/perfil/perfil-detalhe/perfil-detalhe.component';\nimport { NavComponent } from './shared/nav/nav.component';\nimport { TituloComponent } from './shared/titulo/titulo.component';\n\nimport { EventoService } from './services/evento.service';\nimport { LoteService } from './services/lote.service';\nimport { AccountService } from './services/account.service';\n\nimport { JwtInterceptor } from './interceptors/jwt.interceptor';\n\nimport { DateTimeFormatPipe } from './helpers/DateTimeFormat.pipe';\nimport { EventoDetalheComponent } from './components/eventos/evento-detalhe/evento-detalhe.component';\nimport { EventoListaComponent } from './components/eventos/evento-lista/evento-lista.component';\nimport { UserComponent } from './components/user/user.component';\nimport { LoginComponent } from './components/user/login/login.component';\nimport { RegistrationComponent } from './components/user/registration/registration.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { RedesSociaisComponent } from './components/redesSociais/redesSociais.component';\n\ndefineLocale('pt-br', ptBrLocale);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EventosComponent,\n    PalestrantesComponent,\n    PalestranteListaComponent,\n    PalestranteDetalheComponent,\n    ContatosComponent,\n    DashboardComponent,\n    PerfilComponent,\n    PerfilDetalheComponent,\n    RedesSociaisComponent,\n    NavComponent,\n    TituloComponent,\n    DateTimeFormatPipe,\n    EventoDetalheComponent,\n    EventoListaComponent,\n    HomeComponent,\n    UserComponent,\n    LoginComponent,\n    RegistrationComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    CollapseModule.forRoot(),\n    TooltipModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    PaginationModule.forRoot(),\n    TabsModule.forRoot(),\n    ModalModule.forRoot(),\n    ToastrModule.forRoot({\n      timeOut: 4000,\n      positionClass: 'toast-bottom-right',\n      preventDuplicates: true,\n      progressBar: true,\n    }),\n    NgxSpinnerModule,\n    NgxCurrencyModule,\n  ],\n  providers: [\n    AccountService,\n    EventoService,\n    LoteService,\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private toaster: ToastrService\n  ) {}\n\n  canActivate(): boolean {\n    if (localStorage.getItem('user') !== null)\n      return true;\n\n    this.toaster.info('Usuário não autenticado!');\n    this.router.navigate(['/user/login']);\n    return false;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { environment } from '@environments/environment';\nimport { User } from '@app/models/identity/User';\nimport { map, take } from 'rxjs/operators';\nimport { UserUpdate } from '../models/identity/UserUpdate';\n\n@Injectable()\nexport class AccountService {\n  private currentUserSource = new ReplaySubject<User>(1);\n  public currentUser$ = this.currentUserSource.asObservable();\n\n  baseUrl = environment.apiURL + 'api/account/'\n  constructor(private http: HttpClient) { }\n\n  public login(model: any): Observable<void> {\n    return this.http.post<User>(this.baseUrl + 'login', model).pipe(\n      take(1),\n      map((response: User) => {\n        const user = response;\n        if (user) {\n          this.setCurrentUser(user)\n        }\n      })\n    );\n  }\n\n  getUser(): Observable<UserUpdate> {\n    return this.http.get<UserUpdate>(this.baseUrl + 'getUser').pipe(take(1));\n  }\n\n  updateUser(model: UserUpdate): Observable<void> {\n    return this.http.put<UserUpdate>(this.baseUrl + 'updateUser', model).pipe(\n      take(1),\n      map((user: UserUpdate) => {\n          this.setCurrentUser(user);\n        }\n      )\n    )\n  }\n\n  public register(model: any): Observable<void> {\n    return this.http.post<User>(this.baseUrl + 'register', model).pipe(\n      take(1),\n      map((response: User) => {\n        const user = response;\n        if (user) {\n          this.setCurrentUser(user)\n        }\n      })\n    );\n  }\n\n  logout(): void {\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null);\n    this.currentUserSource.complete();\n  }\n\n  public setCurrentUser(user: User): void {\n    localStorage.setItem('user', JSON.stringify(user));\n    this.currentUserSource.next(user);\n  }\n\n  postUpload(file: File): Observable<UserUpdate> {\n    const fileToUpload = file[0] as File;\n    const formData = new FormData();\n    formData.append('file', fileToUpload);\n\n    return this.http\n      .post<UserUpdate>(`${this.baseUrl}upload-image`, formData)\n      .pipe(take(1));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { PalestranteService } from '../../../services/palestrante.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { map, debounceTime, take, tap } from 'rxjs/operators';\nimport { Palestrante } from '@app/models/Palestrante';\n\n@Component({\n  selector: 'app-palestrante-detalhe',\n  templateUrl: './palestrante-detalhe.component.html',\n  styleUrls: ['./palestrante-detalhe.component.scss'],\n})\nexport class PalestranteDetalheComponent implements OnInit {\n  public form!: FormGroup;\n  public situacaoDoForm = '';\n  public corDaDescricao = '';\n\n  constructor(\n    private fb: FormBuilder,\n    public palestranteService: PalestranteService,\n    private toastr: ToastrService,\n    private spinner: NgxSpinnerService\n  ) {}\n\n  ngOnInit() {\n    this.validation();\n    this.verificaForm();\n    this.carregarPalestrante()\n  }\n\n  private validation(): void {\n    this.form = this.fb.group({\n      miniCurriculo: [''],\n    });\n  }\n\n  private carregarPalestrante(): void {\n    this.spinner.show();\n\n    this.palestranteService\n      .getPalestrante()\n      .subscribe(\n        (palestrante: Palestrante) => {\n          this.form.patchValue(palestrante);\n        },\n        (error: any) => {\n          this.toastr.error('Erro ao Carregar o Palestrante', 'Erro')\n        }\n      )\n  }\n\n  public get f(): any {\n    return this.form.controls;\n  }\n\n  private verificaForm(): void {\n    this.form.valueChanges\n      .pipe(\n        map(() => {\n          this.situacaoDoForm = 'Minicurrículo está sendo Atualizado!';\n          this.corDaDescricao = 'text-warning';\n        }),\n        debounceTime(1000),\n        tap(() => this.spinner.show())\n      )\n      .subscribe(() => {\n        this.palestranteService\n          .put({...this.form.value })\n          .subscribe(\n            () => {\n              this.situacaoDoForm = 'Minicurrículo foi ataulizado!';\n              this.corDaDescricao = 'text-success';\n\n              setTimeout(() => {\n                this.situacaoDoForm = 'Minicurrículo foi carregado!';\n                this.corDaDescricao = 'text-muted';\n              }, 2000);\n            },\n            () => {\n              this.toastr.error('Erro ao tentar atualizar Palestrante', 'Erro');\n            }\n          )\n          .add(() => this.spinner.hide())\n      });\n  }\n}\n","\n<form [formGroup]=\"form\">\n  <div class=\"form-group\">\n    <label>Minicurrículo</label>\n    <textarea type=\"text\" formControlName=\"miniCurriculo\" class=\"form-control\"\n    [ngClass]=\"{'is-invalid': f.miniCurriculo.errors && f.miniCurriculo.touched }\"></textarea>\n    <small class=\"form-text\"\n    [ngClass]=\"corDaDescricao\">{{situacaoDoForm}}</small>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { UserLogin } from '../../../models/identity/UserLogin';\nimport { AccountService } from '../../../services/account.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  model = {} as UserLogin;\n\n  constructor(\n    private accountService: AccountService,\n    private router: Router,\n    private toaster: ToastrService\n  ) {}\n\n  ngOnInit(): void {}\n\n  public login(): void {\n    this.accountService.login(this.model).subscribe(\n      () => {\n        this.router.navigateByUrl('/dashboard');\n      },\n      (error: any) => {\n        if (error.status == 401)\n          this.toaster.error('usuário ou senha inválido');\n        else console.error(error);\n      }\n    );\n  }\n}\n","<div class=\"d-flex align-items-center vh-100\">\n\n  <div class=\"mx-auto text-center shadow-sm bg-white rounded p-5 my-5\">\n\n    <form #loginForm=\"ngForm\" class=\"form-signin\" (ngSubmit)=\"login()\">\n      <i class=\"fa fa-users mb-2\"></i>\n      <h1 class=\"h3 mb-3 font-weight-normal\">Entrar com</h1>\n      <label for=\"username\" class=\"sr-only\">Usuário</label>\n      <input\n        [(ngModel)]=\"model.userName\"\n        name=\"username\"\n        type=\"email\"\n        id=\"username\"\n        class=\"form-control\"\n        placeholder=\"Usuário\"\n        required\n      >\n      <label for=\"password\" class=\"sr-only\">Password</label>\n      <input\n        [(ngModel)]=\"model.password\"\n        name=\"password\"\n        type=\"password\"\n        id=\"password\"\n        class=\"form-control\"\n        placeholder=\"Senha\"\n        required\n      >\n      <button [disabled]=\"loginForm.invalid\" class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Entrar</button>\n      <p class=\"mt-4 mb-2 text-muted\">Não tem login? Cadastre-se abaixo</p>\n      <a class=\"btn btn-lg btn-link btn-block\" routerLink=\"/user/registration\">Quero me cadastrar</a>\n    </form>\n\n  </div>\n\n</div>\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { User } from '../models/identity/User';\nimport { AccountService } from '../services/account.service';\nimport { catchError, take } from 'rxjs/operators';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(private accountService: AccountService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    let currentUser: User;\n\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n      currentUser = user\n\n      if (currentUser) {\n        request = request.clone({\n            setHeaders: {\n              Authorization: `Bearer ${currentUser.token}`\n            }\n          }\n        );\n      }\n    });\n\n    return next.handle(request).pipe(\n      catchError(error => {\n        if (error) {\n          localStorage.removeItem('user')\n        }\n        return throwError(error);\n      })\n    );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { RedeSocial } from '@app/models/RedeSocial';\nimport { environment } from '@environments/environment';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RedeSocialService {\n  baseURL = environment.apiURL + 'api/redesSociais';\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   *\n   * @param origem Precisa passar a palavra 'palestrante' ou 'evento' - Escrito em minúsculo.\n   * @param id Precisa passar o PalestranteId ou o EventoId dependendo da sua Origem.\n   * @returns Observable<RedeSocial[]>\n   */\n  public getRedesSociais(origem: string, id: number): Observable<RedeSocial[]> {\n    let URL =\n      id === 0\n        ? `${this.baseURL}/${origem}`\n        : `${this.baseURL}/${origem}/${id}`;\n\n    return this.http.get<RedeSocial[]>(URL).pipe(take(1));\n  }\n\n  /**\n   *\n   * @param origem Precisa passar a palavra 'palestrante' ou 'evento' - Escrito em minúsculo.\n   * @param id Precisa passar o PalestranteId ou o EventoId dependendo da sua Origem.\n   * @param redesSociais Precia adicionar Redes Sociais organizadas em RedeSocial[].\n   * @returns Observable<RedeSocial[]>\n   */\n  public saveRedesSociais(\n    origem: string,\n    id: number,\n    redesSociais: RedeSocial[]\n  ): Observable<RedeSocial[]> {\n    let URL =\n      id === 0\n        ? `${this.baseURL}/${origem}`\n        : `${this.baseURL}/${origem}/${id}`;\n\n    return this.http.put<RedeSocial[]>(URL, redesSociais).pipe(take(1));\n  }\n\n   /**\n   *\n   * @param origem Precisa passar a palavra 'palestrante' ou 'evento' - Escrito em minúsculo.\n   * @param id Precisa passar o PalestranteId ou o EventoId dependendo da sua Origem.\n   * @param redeSocialId Precia usar o id da Rede Social\n   * @returns Observable<any> - Pois é o retorno da Rota.\n   */\n    public deleteRedeSocial(\n      origem: string,\n      id: number,\n      redeSocialId: number\n    ): Observable<any> {\n      let URL =\n        id === 0\n          ? `${this.baseURL}/${origem}/${redeSocialId}`\n          : `${this.baseURL}/${origem}/${id}/${redeSocialId}`;\n\n      return this.http.delete(URL).pipe(take(1));\n    }\n}\n","import { Evento } from './../models/Evento';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take, map } from 'rxjs/operators';\nimport { environment } from '@environments/environment';\nimport { PaginatedResult } from '@app/models/Pagination';\n\n@Injectable(\n// { providedIn: 'root'}\n)\nexport class EventoService {\n  baseURL = environment.apiURL + 'api/eventos';\n\n  constructor(private http: HttpClient) { }\n\n  public getEventos(page?: number, itemsPerPage?: number, term?: string): Observable<PaginatedResult<Evento[]>> {\n    const paginatedResult: PaginatedResult<Evento[]> = new PaginatedResult<Evento[]>();\n\n    let params = new HttpParams;\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page.toString());\n      params = params.append('pageSize', itemsPerPage.toString());\n    }\n\n    if (term != null && term != '')\n      params = params.append('term', term)\n\n    return this.http\n      .get<Evento[]>(this.baseURL, {observe: 'response', params })\n      .pipe(\n        take(1),\n        map((response) => {\n          paginatedResult.result = response.body;\n          if(response.headers.has('Pagination')) {\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n          return paginatedResult;\n        }));\n  }\n\n  public getEventoById(id: number): Observable<Evento> {\n    return this.http\n      .get<Evento>(`${this.baseURL}/${id}`)\n      .pipe(take(1));\n  }\n\n  public post(evento: Evento): Observable<Evento> {\n    return this.http\n      .post<Evento>(this.baseURL, evento)\n      .pipe(take(1));\n  }\n\n  public put(evento: Evento): Observable<Evento> {\n    return this.http\n      .put<Evento>(`${this.baseURL}/${evento.id}`, evento)\n      .pipe(take(1));\n  }\n\n  public deleteEvento(id: number): Observable<any> {\n    return this.http\n      .delete(`${this.baseURL}/${id}`)\n      .pipe(take(1));\n  }\n\n  postUpload(eventoId: number, file: File): Observable<Evento> {\n    const fileToUpload = file[0] as File;\n    const formData = new FormData();\n    formData.append('file', fileToUpload);\n\n    return this.http\n      .post<Evento>(`${this.baseURL}/upload-image/${eventoId}`, formData)\n      .pipe(take(1));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-palestrantes',\n  templateUrl: './palestrantes.component.html',\n  styleUrls: ['./palestrantes.component.scss']\n})\nexport class PalestrantesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-titulo [titulo]=\"'Palestrantes'\"></app-titulo>\n<app-palestrante-lista></app-palestrante-lista>\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '@environments/environment';\nimport { Palestrante } from '@app/models/Palestrante';\nimport { PaginatedResult } from '@app/models/Pagination';\nimport { Observable } from 'rxjs';\nimport { take, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PalestranteService {\n  baseURL = environment.apiURL + 'api/palestrantes';\n\n  constructor(private http: HttpClient) {}\n\n  public getPalestrantes(\n    page?: number,\n    itemsPerPage?: number,\n    term?: string\n  ): Observable<PaginatedResult<Palestrante[]>> {\n    const paginatedResult: PaginatedResult<Palestrante[]> = new PaginatedResult<\n      Palestrante[]\n    >();\n\n    let params = new HttpParams();\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page.toString());\n      params = params.append('pageSize', itemsPerPage.toString());\n    }\n\n    if (term != null && term != '') params = params.append('term', term);\n\n    return this.http\n      .get<Palestrante[]>(this.baseURL + '/all', { observe: 'response', params })\n      .pipe(\n        take(1),\n        map((response) => {\n          paginatedResult.result = response.body;\n          if (response.headers.has('Pagination')) {\n            paginatedResult.pagination = JSON.parse(\n              response.headers.get('Pagination')\n            );\n          }\n          return paginatedResult;\n        })\n      );\n  }\n\n  public getPalestrante(): Observable<Palestrante> {\n    return this.http\n      .get<Palestrante>(`${this.baseURL}`)\n      .pipe(take(1));\n  }\n\n  public post(): Observable<Palestrante> {\n    return this.http\n      .post<Palestrante>(this.baseURL, {} as Palestrante)\n      .pipe(take(1));\n  }\n\n  public put(palestrante: Palestrante): Observable<Palestrante> {\n    return this.http\n      .put<Palestrante>(`${this.baseURL}`, palestrante)\n      .pipe(take(1));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { UserUpdate } from '@app/models/identity/UserUpdate';\nimport { AccountService } from '@app/services/account.service';\nimport { environment } from '@environments/environment';\n\n@Component({\n  selector: 'app-perfil',\n  templateUrl: './perfil.component.html',\n  styleUrls: ['./perfil.component.scss'],\n})\nexport class PerfilComponent implements OnInit {\n  public usuario = {} as UserUpdate;\n  public file: File;\n  public imagemURL = '';\n\n  public get ehPalestrante(): boolean {\n    return this.usuario.funcao === 'Palestrante';\n  }\n\n  constructor(\n    private spinner: NgxSpinnerService,\n    private toastr: ToastrService,\n    private accountService: AccountService\n  ) {}\n\n  ngOnInit(): void {\n\n  }\n\n  public setFormValue(usuario: UserUpdate): void {\n    this.usuario = usuario;\n    if (this.usuario.imagemURL)\n      this.imagemURL = environment.apiURL + `resources/perfil/${this.usuario.imagemURL}`;\n    else\n      this.imagemURL = './assets/img/perfil.png';\n\n  }\n\n  onFileChange(ev: any): void {\n    const reader = new FileReader();\n\n    reader.onload = (event: any) => this.imagemURL = event.target.result;\n\n    this.file = ev.target.files;\n    reader.readAsDataURL(this.file[0]);\n\n    this.uploadImagem();\n  }\n\n  private uploadImagem(): void {\n    this.spinner.show();\n    this.accountService\n      .postUpload(this.file)\n      .subscribe(\n        () => this.toastr.success('Imagem atualizada com Sucesso', 'Sucesso!'),\n        (error: any) => {\n          this.toastr.error('Erro ao fazer upload de imagem','Erro!');\n          console.error(error);\n        }\n      ).add(() => this.spinner.hide());\n  }\n\n\n}\n","<app-titulo [titulo]=\"'Perfil' + (ehPalestrante ? ' Palestrante' : '')\" [iconClass]=\"'fa fa-address-card'\"></app-titulo>\n<div class=\"card rounded shadow-sm\">\n\n    <div class=\"row p-3\">\n      <div class=\"col-lg-3 pt-1\">\n        <div class=\"card mb-3\">\n          <div class=\"card-header\">\n            <input type=\"file\" #file (change)=\"onFileChange($event)\" style=\"display: none;\">\n          </div>\n          <div class=\"d-flex align-self-center pt-3\">\n              <img\n              [src]=\"imagemURL\"\n              class=\"rounded-circle\"\n              (click)=\"file.click()\"\n              name=\"aboutme\" width=\"120\" height=\"120\"\n              style=\"cursor: pointer;\">\n          </div>\n          <div class=\"card-body\">\n            <div class=\"h4 text-center mb-3\">@{{usuario.userName}}</div>\n            <div class=\"h7 text-bold pb-1\"><b>Nome:</b> {{usuario.primeiroNome + ' ' + usuario.ultimoNome}}</div>\n            <div class=\"h7\">\n              {{usuario.descricao}}\n            </div>\n          </div>\n          <ul class=\"list-group list-group-flush\">\n            <li class=\"list-group-item\">\n              <div class=\"row\">\n                <div class=\"col-6 text-center border-right\">\n                  <div class=\"h5\">0</div>\n                  <div class=\"h6 text-muted\">Meus Eventos Criados</div>\n                </div>\n                <div class=\"col-6 text-center\">\n                  <div class=\"h5\">0</div>\n                  <div class=\"h6 text-muted\">Eventos como {{ehPalestrante ? ' Palestrante' : 'Participante'}}</div>\n                </div>\n              </div>\n            </li>\n          </ul>\n          <div class=\"card-footer\"></div>\n        </div>\n      </div>\n      <div class=\"col-lg-9\">\n        <tabset>\n          <tab class=\"border border-top-0 p-3\">\n            <ng-template tabHeading>\n              <i class=\"fa fa-address-card mr-2\"></i><span>Perfil</span>\n            </ng-template>\n\n            <app-perfil-detalhe (changeFormValue)=\"setFormValue($event)\"></app-perfil-detalhe>\n          </tab>\n          <tab *ngIf=\"ehPalestrante\" class=\"border border-top-0 p-3\">\n            <ng-template tabHeading>\n              <i class=\"fa fa-user mr-2\"></i><span>Palestrante</span>\n            </ng-template>\n            <div class=\"form-group\">\n              <h3 class=\"border-bottom\">Palestrante</h3>\n            </div>\n\n            <app-palestrante-detalhe></app-palestrante-detalhe>\n          </tab>\n          <tab *ngIf=\"ehPalestrante\" class=\"border border-top-0 p-3\">\n            <ng-template tabHeading>\n              <i class=\"fa fa-share-square mr-2\"></i><span>Rede Social</span>\n            </ng-template>\n            <div class=\"form-group\">\n              <h3 class=\"border-bottom\">Rede Social</h3>\n            </div>\n\n            <app-redesSociais></app-redesSociais>\n          </tab>\n        </tabset>\n        </div>\n</div>\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { PalestrantesComponent } from './components/palestrantes/palestrantes.component';\n\nimport { EventosComponent } from './components/eventos/eventos.component';\nimport { EventoDetalheComponent } from './components/eventos/evento-detalhe/evento-detalhe.component';\nimport { EventoListaComponent } from './components/eventos/evento-lista/evento-lista.component';\n\nimport { UserComponent } from './components/user/user.component';\nimport { LoginComponent } from './components/user/login/login.component';\nimport { RegistrationComponent } from './components/user/registration/registration.component';\nimport { PerfilComponent } from './components/user/perfil/perfil.component';\n\nimport { ContatosComponent } from './components/contatos/contatos.component';\n\nimport { AuthGuard } from './guard/auth.guard';\nimport { HomeComponent } from './components/home/home.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    canActivate: [AuthGuard],\n    children: [\n      { path: 'user', redirectTo: 'user/perfil' },\n      {\n        path: 'user/perfil',\n        component: PerfilComponent,\n      },\n      { path: 'eventos', redirectTo: 'eventos/lista' },\n      {\n        path: 'eventos',\n        component: EventosComponent,\n        children: [\n          { path: 'detalhe/:id', component: EventoDetalheComponent },\n          { path: 'detalhe', component: EventoDetalheComponent },\n          { path: 'lista', component: EventoListaComponent },\n        ],\n      },\n      { path: 'dashboard', component: DashboardComponent },\n      { path: 'palestrantes', component: PalestrantesComponent },\n      { path: 'contatos', component: ContatosComponent },\n    ],\n  },\n  {\n    path: 'user',\n    component: UserComponent,\n    children: [\n      { path: 'login', component: LoginComponent },\n      { path: 'registration', component: RegistrationComponent },\n    ],\n  },\n  { path: 'home', component: HomeComponent },\n  { path: '**', redirectTo: 'home', pathMatch: 'full' },\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n\t<router-outlet></router-outlet>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}